name: eXo PR Task Webhook

on:
  pull_request:
    branches: [ develop, acceptance ]
    types: [opened, synchronize, reopened, edited, closed]
  pull_request_review:
    branches: [ develop, acceptance ]
    types: [submitted]

env:
  message: ${{ github.event.pull_request.title }}
  state: ${{ github.event.pull_request.state }}
  pull_number: ${{ github.event.pull_request.number }}
  repo_name: ${{ github.event.repository.name }}
  org_name: ${{ github.event.organization.name }}
jobs:
  check_tasks:
    name: Check for Tasks Ids
    runs-on: ubuntu-latest
    steps:

      - name: Check Tasks id existance
        run: |
          TASK_IDS="$(echo ${message:-}| grep -oP '[0-9]{4,}' | xargs)"
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          if [ -z "${TASK_IDS}" ]; then 
            echo "No tasks found! Abort."
          fi
          echo "::set-output name=tasks::${TASK_IDS}"

  notif:
    name: Notif tasks about PR change
    runs-on: ubuntu-latest
    needs: check_tasks
    #if: ${{ needs.check_tasks.outputs.tasks }}
    steps:
      - name: Check PR state
        run: |
          link="PR <a href=\"https://github.com/${organisation}/${repo_name}/pull/${pull_number}\">#${pull_number}"
          case ${{ github.event.action }} in 
            created|merged|closed|reopened) msg="$link has been ${{ github.event.action }}.";;
          esac
          if [ "${{ github.event.name }}" = "pull_request_review" ]; then
            msg="A review has been submited on $link."
          fi
          echo $msg

